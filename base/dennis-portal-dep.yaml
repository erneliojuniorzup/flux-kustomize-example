---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    fluxcd.io/automated: "true"
#    fluxcd.io/tag.dennis-portal: regex:^[0-9]+
    fluxcd.io/tag.dennis-portal: regex:^dev-.*
  generation: 4
  labels:
    app.kubernetes.io/instance: dennis-portal
    app.kubernetes.io/name: dennis-portal
  name: dennis-portal
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: dennis-portal
      app.kubernetes.io/name: dennis-portal
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "3000"
      labels:
        app.kubernetes.io/instance: dennis-portal
        app.kubernetes.io/name: dennis-portal
    spec:
      shareProcessNamespace: true
      containers:
      - env:
        - name: MIDDLEWARE_URL
          value: "https://dennis-middleware.devdennis.zup.io"
        - name: LIVEPASS_ENDPOINT
          value: "https://idm-dev.continuousplatform.com/auth/realms/ZupDev/protocol/openid-connect"
        - name: LIVEPASS_CLIENT_ID
          value: "Dennis"
        - name: LIVEPASS_REDIRECT_URI
          value: "https://dennis-portal.devdennis.zup.io/callback"
        image: 731927492438.dkr.ecr.sa-east-1.amazonaws.com/dennis-portal:dev-47
        imagePullPolicy: Always
        name: dennis-portal
          #          livenessProbe:
          #            failureThreshold: 3
          #            httpGet:
          #              path: /metrics
          #              port: 3000
          #              scheme: HTTP
          #            initialDelaySeconds: 10
          #            periodSeconds: 30
          #            successThreshold: 1
          #            timeoutSeconds: 1
          #          readinessProbe:
          #            failureThreshold: 3
          #            httpGet:
          #              path: /metrics
          #              port: 3000
          #              scheme: HTTP
          #            initialDelaySeconds: 5
          #            periodSeconds: 10
          #            successThreshold: 1
          #            timeoutSeconds: 1
        resources:
          limits:
            cpu: "1"
            memory: 1536Mi
          requests:
            cpu: 128m
            memory: 256Mi
        securityContext: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
